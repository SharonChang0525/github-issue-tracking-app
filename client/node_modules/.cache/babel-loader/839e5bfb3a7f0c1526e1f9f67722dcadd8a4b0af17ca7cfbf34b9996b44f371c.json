{"ast":null,"code":"import * as type from \"../actions/ActionTypes\";\nconst filterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"all\";\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case type.SET_ALL:\n      return \"all\";\n    case type.SET_OPEN:\n      return \"open\";\n    case type.SET_IN_PROGRESS:\n      return \"in_progress\";\n    case type.SET_DONE:\n      return \"done\";\n    default:\n      return state;\n  }\n};\nexport default filterReducer;","map":{"version":3,"names":["type","filterReducer","state","arguments","length","undefined","action","SET_ALL","SET_OPEN","SET_IN_PROGRESS","SET_DONE"],"sources":["C:/Users/user/Desktop/Life/sideProject/Dcard2023-frontend-hw/client/src/reducer/filter.js"],"sourcesContent":["import * as type from \"../actions/ActionTypes\";\r\n\r\nconst filterReducer = (state = \"all\", action) => {\r\n    switch(action.type) {\r\n        case type.SET_ALL:\r\n            return \"all\";\r\n        case type.SET_OPEN:\r\n            return \"open\";\r\n        case type.SET_IN_PROGRESS:\r\n            return \"in_progress\";\r\n        case type.SET_DONE:\r\n            return \"done\";\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default filterReducer;"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,wBAAwB;AAE9C,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA2B;EAAA,IAA1BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxC,QAAOC,MAAM,CAACN,IAAI;IACd,KAAKA,IAAI,CAACO,OAAO;MACb,OAAO,KAAK;IAChB,KAAKP,IAAI,CAACQ,QAAQ;MACd,OAAO,MAAM;IACjB,KAAKR,IAAI,CAACS,eAAe;MACrB,OAAO,aAAa;IACxB,KAAKT,IAAI,CAACU,QAAQ;MACd,OAAO,MAAM;IACjB;MACI,OAAOR,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}