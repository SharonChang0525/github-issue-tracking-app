{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Life\\\\sideProject\\\\Dcard2023-frontend-hw\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getAllTasks } from '../actions/tasks';\nimport TaskItem from \"./TaskItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const tasks = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // get all tasks //\n    async function initialTask() {\n      let list = [];\n      await fetch(\"http://localhost:4000/getAllTasks\", {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        for (let i = 0; i < data.length; i++) {\n          let tmpObj = {\n            id: data[i].id,\n            title: data[i].title,\n            body: data[i].body,\n            state: data[i].state,\n            repo: data[i].repository.name,\n            owner: data[i].repository.owner.login,\n            created_at: data[i].created_at\n          };\n          // console.log(list);\n          list.push(tmpObj);\n        }\n      });\n      dispatch(getAllTasks(list));\n    }\n    initialTask();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"my-2\",\n    children: tasks.map(item => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: {\n        ...item\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"MHZNQ8U6UW3eW5K5TdbnCHvwlvk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","getAllTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","state","dispatch","initialTask","list","fetch","method","headers","localStorage","getItem","then","response","json","data","console","log","i","length","tmpObj","id","title","body","repo","repository","name","owner","login","created_at","push","class","children","map","item","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Life/sideProject/Dcard2023-frontend-hw/client/src/components/TaskList.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {getAllTasks} from '../actions/tasks'\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n\r\nfunction TaskList() {\r\n    const tasks = useSelector(state => state.tasks);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n      // get all tasks //\r\n      async function initialTask() {\r\n        let list = [];\r\n        await fetch(\"http://localhost:4000/getAllTasks\", {\r\n          method: \"GET\", \r\n            headers: {\r\n              \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n          }).then((response) => {\r\n            return response.json();\r\n          }).then((data) => {\r\n            console.log(data);\r\n            for(let i = 0; i < data.length; i++) {\r\n                let tmpObj = {\r\n                    id: data[i].id,\r\n                    title: data[i].title,\r\n                    body: data[i].body,\r\n                    state: data[i].state,\r\n                    repo: data[i].repository.name,\r\n                    owner: data[i].repository.owner.login,\r\n                    created_at: data[i].created_at\r\n                    \r\n                };\r\n                // console.log(list);\r\n                list.push(tmpObj);\r\n            }\r\n    \r\n        }) \r\n        dispatch(getAllTasks(list));\r\n      }\r\n      initialTask();\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n  return (\r\n    <div class=\"my-2\">\r\n      {\r\n        tasks.map((item) => \r\n          <TaskItem task={{...item}} />\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,QAAQ,GAAGT,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IAEd;IACA,eAAeY,WAAWA,CAAA,EAAG;MAC3B,IAAIC,IAAI,GAAG,EAAE;MACb,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC/CC,MAAM,EAAE,KAAK;QACXC,OAAO,EAAE;UACP,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;QACjE;MACF,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QACpB,OAAOA,QAAQ,CAACC,IAAI,EAAE;MACxB,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;QACjB,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UACjC,IAAIE,MAAM,GAAG;YACTC,EAAE,EAAEN,IAAI,CAACG,CAAC,CAAC,CAACG,EAAE;YACdC,KAAK,EAAEP,IAAI,CAACG,CAAC,CAAC,CAACI,KAAK;YACpBC,IAAI,EAAER,IAAI,CAACG,CAAC,CAAC,CAACK,IAAI;YAClBpB,KAAK,EAAEY,IAAI,CAACG,CAAC,CAAC,CAACf,KAAK;YACpBqB,IAAI,EAAET,IAAI,CAACG,CAAC,CAAC,CAACO,UAAU,CAACC,IAAI;YAC7BC,KAAK,EAAEZ,IAAI,CAACG,CAAC,CAAC,CAACO,UAAU,CAACE,KAAK,CAACC,KAAK;YACrCC,UAAU,EAAEd,IAAI,CAACG,CAAC,CAAC,CAACW;UAExB,CAAC;UACD;UACAvB,IAAI,CAACwB,IAAI,CAACV,MAAM,CAAC;QACrB;MAEJ,CAAC,CAAC;MACFhB,QAAQ,CAACR,WAAW,CAACU,IAAI,CAAC,CAAC;IAC7B;IACAD,WAAW,EAAE;EAIf,CAAC,EAAE,EAAE,CAAC;EAGR,oBACEN,OAAA;IAAKgC,KAAK,EAAC,MAAM;IAAAC,QAAA,EAEb9B,KAAK,CAAC+B,GAAG,CAAEC,IAAI,iBACbnC,OAAA,CAACF,QAAQ;MAACsC,IAAI,EAAE;QAAC,GAAGD;MAAI;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC9B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEC;AAEV;AAACtC,EAAA,CApDQD,QAAQ;EAAA,QACCN,WAAW,EACRC,WAAW;AAAA;AAAA6C,EAAA,GAFvBxC,QAAQ;AAsDjB,eAAeA,QAAQ;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}