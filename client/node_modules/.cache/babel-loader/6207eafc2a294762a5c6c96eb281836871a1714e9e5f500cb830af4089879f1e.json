{"ast":null,"code":"import * as type from \"../actions/ActionTypes\";\nconst taskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case type.GET_ALL_TASK:\n      /*\r\n      async function initialTask(){   \r\n          let list = [];\r\n          await fetch(\"http://localhost:4000/getAllTasks\", {\r\n          method: \"GET\", \r\n              headers: {\r\n              \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\r\n              }\r\n          }).then((response) => {\r\n              return response.json();\r\n          }).then((data) => {\r\n              // console.log(data);\r\n              for(let i = 0; i < data.length; i++) {\r\n                  let tmpObj = {\r\n                      id: data[i].id,\r\n                      title: data[i].title,\r\n                      body: data[i].body,\r\n                      state: data[i].state,\r\n                      repo: data[i].repository.name,\r\n                      owner: data[i].repository.owner.login,\r\n                      created_at: data[i].created_at,\r\n                      issue_number: data[i].number\r\n                  };\r\n                  // console.log(list);\r\n                  list.push(tmpObj);\r\n              }           \r\n          }) \r\n          // state = list;\r\n          console.log(list);\r\n          // console.log(state);\r\n            return list;\r\n      }\r\n        initialTask();\r\n      */\n      let list = [];\n      fetch(\"http://localhost:4000/getAllTasks\", {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        // console.log(data);\n        for (let i = 0; i < data.length; i++) {\n          let tmpObj = {\n            id: data[i].id,\n            title: data[i].title,\n            body: data[i].body,\n            state: data[i].state,\n            repo: data[i].repository.name,\n            owner: data[i].repository.owner.login,\n            created_at: data[i].created_at,\n            issue_number: data[i].number\n          };\n          // console.log(list);\n          list.push(tmpObj);\n        }\n      });\n      return state;\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["type","taskReducer","state","arguments","length","undefined","action","GET_ALL_TASK","list","fetch","method","headers","localStorage","getItem","then","response","json","data","i","tmpObj","id","title","body","repo","repository","name","owner","login","created_at","issue_number","number","push"],"sources":["C:/Users/user/Desktop/Life/sideProject/Dcard2023-frontend-hw/client/src/reducer/tasks.js"],"sourcesContent":["import * as type from \"../actions/ActionTypes\";\r\n\r\nconst taskReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case type.GET_ALL_TASK:\r\n            /*\r\n            async function initialTask(){   \r\n                let list = [];\r\n                await fetch(\"http://localhost:4000/getAllTasks\", {\r\n                method: \"GET\", \r\n                    headers: {\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\r\n                    }\r\n                }).then((response) => {\r\n                    return response.json();\r\n                }).then((data) => {\r\n                    // console.log(data);\r\n                    for(let i = 0; i < data.length; i++) {\r\n                        let tmpObj = {\r\n                            id: data[i].id,\r\n                            title: data[i].title,\r\n                            body: data[i].body,\r\n                            state: data[i].state,\r\n                            repo: data[i].repository.name,\r\n                            owner: data[i].repository.owner.login,\r\n                            created_at: data[i].created_at,\r\n                            issue_number: data[i].number\r\n                        };\r\n                        // console.log(list);\r\n                        list.push(tmpObj);\r\n                    }           \r\n                }) \r\n                // state = list;\r\n                console.log(list);\r\n                // console.log(state);\r\n\r\n                return list;\r\n            }\r\n\r\n            initialTask();\r\n            */\r\n           let list = [];\r\n            fetch(\"http://localhost:4000/getAllTasks\", {\r\n            method: \"GET\", \r\n                headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\r\n                }\r\n            }).then((response) => {\r\n                return response.json();\r\n            }).then((data) => {\r\n                // console.log(data);\r\n                for(let i = 0; i < data.length; i++) {\r\n                    let tmpObj = {\r\n                        id: data[i].id,\r\n                        title: data[i].title,\r\n                        body: data[i].body,\r\n                        state: data[i].state,\r\n                        repo: data[i].repository.name,\r\n                        owner: data[i].repository.owner.login,\r\n                        created_at: data[i].created_at,\r\n                        issue_number: data[i].number\r\n                    };\r\n                    // console.log(list);\r\n                    list.push(tmpObj);\r\n                }           \r\n            }) \r\n            \r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default taskReducer;"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,wBAAwB;AAE9C,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnC,QAAOC,MAAM,CAACN,IAAI;IACd,KAAKA,IAAI,CAACO,YAAY;MAClB;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAGW,IAAIC,IAAI,GAAG,EAAE;MACZC,KAAK,CAAC,mCAAmC,EAAE;QAC3CC,MAAM,EAAE,KAAK;QACTC,OAAO,EAAE;UACT,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;QAC/D;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAACC,IAAI,EAAE;MAC1B,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;QACd;QACA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACb,MAAM,EAAEc,CAAC,EAAE,EAAE;UACjC,IAAIC,MAAM,GAAG;YACTC,EAAE,EAAEH,IAAI,CAACC,CAAC,CAAC,CAACE,EAAE;YACdC,KAAK,EAAEJ,IAAI,CAACC,CAAC,CAAC,CAACG,KAAK;YACpBC,IAAI,EAAEL,IAAI,CAACC,CAAC,CAAC,CAACI,IAAI;YAClBpB,KAAK,EAAEe,IAAI,CAACC,CAAC,CAAC,CAAChB,KAAK;YACpBqB,IAAI,EAAEN,IAAI,CAACC,CAAC,CAAC,CAACM,UAAU,CAACC,IAAI;YAC7BC,KAAK,EAAET,IAAI,CAACC,CAAC,CAAC,CAACM,UAAU,CAACE,KAAK,CAACC,KAAK;YACrCC,UAAU,EAAEX,IAAI,CAACC,CAAC,CAAC,CAACU,UAAU;YAC9BC,YAAY,EAAEZ,IAAI,CAACC,CAAC,CAAC,CAACY;UAC1B,CAAC;UACD;UACAtB,IAAI,CAACuB,IAAI,CAACZ,MAAM,CAAC;QACrB;MACJ,CAAC,CAAC;MAEF,OAAOjB,KAAK;IAChB;MACI,OAAOA,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}